digraph {
compound=true;
subgraph cluster_StateMachine {
label="org.openkilda.wfm.topology.flowhs.fsm.pathswap.FlowPathSwapFsm";
INGRESS_RULES_VALIDATED [label="INGRESS_RULES_VALIDATED"];
UPDATING_FLOW_STATUS [label="UPDATING_FLOW_STATUS"];
INITIALIZED [label="INITIALIZED"];
VALIDATING_INGRESS_RULES [label="VALIDATING_INGRESS_RULES"];
FLOW_STATUS_UPDATED [label="FLOW_STATUS_UPDATED"];
FINISHED [label="FINISHED"];
OLD_RULES_REMOVED [label="OLD_RULES_REMOVED"];
PATHS_SWAP_REVERTED [label="PATHS_SWAP_REVERTED"];
INSTALLING_INGRESS_RULES [label="INSTALLING_INGRESS_RULES"];
INGRESS_RULES_INSTALLED [label="INGRESS_RULES_INSTALLED"];
REVERTING_PATHS_SWAP [label="REVERTING_PATHS_SWAP"];
REVERTING_NEW_RULES [label="REVERTING_NEW_RULES"];
NEW_RULES_REVERTED [label="NEW_RULES_REVERTED"];
REVERTING_FLOW_STATUS [label="REVERTING_FLOW_STATUS"];
REMOVING_OLD_RULES [label="REMOVING_OLD_RULES"];
FLOW_VALIDATED [label="FLOW_VALIDATED"];
FLOW_UPDATED [label="FLOW_UPDATED"];
FINISHED_WITH_ERROR [label="FINISHED_WITH_ERROR"];

INGRESS_RULES_VALIDATED -> REMOVING_OLD_RULES [ label="NEXT"];
UPDATING_FLOW_STATUS -> FLOW_STATUS_UPDATED [ label="NEXT"];
INITIALIZED -> FLOW_VALIDATED [ label="NEXT"];
INITIALIZED -> FINISHED_WITH_ERROR [ label="TIMEOUT"];
VALIDATING_INGRESS_RULES -> VALIDATING_INGRESS_RULES [ label="RESPONSE_RECEIVED"];
VALIDATING_INGRESS_RULES -> VALIDATING_INGRESS_RULES [ label="ERROR_RECEIVED"];
VALIDATING_INGRESS_RULES -> INGRESS_RULES_VALIDATED [ label="RULES_VALIDATED"];
FLOW_STATUS_UPDATED -> FINISHED [ label="NEXT"];
FLOW_STATUS_UPDATED -> FINISHED_WITH_ERROR [ label="ERROR"];
OLD_RULES_REMOVED -> UPDATING_FLOW_STATUS [ label="NEXT"];
PATHS_SWAP_REVERTED -> REVERTING_NEW_RULES [ label="NEXT"];
PATHS_SWAP_REVERTED -> REVERTING_NEW_RULES [ label="ERROR"];
INSTALLING_INGRESS_RULES -> INSTALLING_INGRESS_RULES [ label="RESPONSE_RECEIVED"];
INSTALLING_INGRESS_RULES -> INSTALLING_INGRESS_RULES [ label="ERROR_RECEIVED"];
INSTALLING_INGRESS_RULES -> REVERTING_PATHS_SWAP [ label="TIMEOUT"];
INSTALLING_INGRESS_RULES -> REVERTING_PATHS_SWAP [ label="ERROR"];
INSTALLING_INGRESS_RULES -> INGRESS_RULES_INSTALLED [ label="RULES_INSTALLED"];
INGRESS_RULES_INSTALLED -> VALIDATING_INGRESS_RULES [ label="NEXT"];
REVERTING_PATHS_SWAP -> PATHS_SWAP_REVERTED [ label="NEXT"];
REVERTING_NEW_RULES -> REVERTING_NEW_RULES [ label="RESPONSE_RECEIVED"];
REVERTING_NEW_RULES -> REVERTING_NEW_RULES [ label="ERROR_RECEIVED"];
REVERTING_NEW_RULES -> NEW_RULES_REVERTED [ label="RULES_REMOVED"];
REVERTING_NEW_RULES -> NEW_RULES_REVERTED [ label="ERROR"];
NEW_RULES_REVERTED -> REVERTING_FLOW_STATUS [ label="NEXT"];
NEW_RULES_REVERTED -> REVERTING_FLOW_STATUS [ label="ERROR"];
REVERTING_FLOW_STATUS -> FINISHED_WITH_ERROR [ label="ERROR"];
REVERTING_FLOW_STATUS -> FINISHED_WITH_ERROR [ label="NEXT"];
REMOVING_OLD_RULES -> REMOVING_OLD_RULES [ label="RESPONSE_RECEIVED"];
REMOVING_OLD_RULES -> REMOVING_OLD_RULES [ label="ERROR_RECEIVED"];
REMOVING_OLD_RULES -> OLD_RULES_REMOVED [ label="RULES_REMOVED"];
FLOW_VALIDATED -> FINISHED_WITH_ERROR [ label="ERROR"];
FLOW_VALIDATED -> FLOW_UPDATED [ label="NEXT"];
FLOW_UPDATED -> INSTALLING_INGRESS_RULES [ label="NEXT"];}}
